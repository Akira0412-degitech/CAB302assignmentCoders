name: Java CI with Maven

on:
  push:
    branches: [ "Akira_Refactoring" ]
  pull_request:
    branches: [ "master" ]


jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: cab302_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Give Maven Wrapper permission
        run: chmod +x mvnw

      - name: Build and Test
        env:
          DB_URL: jdbc:mysql://127.0.0.1:3306/cab302_test?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
          DB_USER: root
          DB_PASS: root
        run: mvn -B verify
      # --------------------------
      # ðŸ“˜ Generate and Publish Javadoc
      # --------------------------
      - name: Generate Javadoc
        run: ./mvnw clean compile javadoc:javadoc

      - name: Commit and push updated Javadoc
        run: |
          if [ -d "docs/javadoc" ]; then
            echo "ðŸ§¾ Cleaning old Javadoc directory..."
            rm -rf docs/javadoc
          fi
          mkdir -p docs/javadoc
          cp -r docs/javadoc/* docs/javadoc/ || true
          cp -r target/site/apidocs/* docs/javadoc/ || true

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/javadoc
          git commit -m "ðŸ§¾ Auto-update Javadoc [skip ci]" || echo "No changes to commit"
          git push origin Akira_Refactoring
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Javadoc as artifact (for debugging)
        uses: actions/upload-artifact@v4
        with:
          name: javadoc
          path: docs/javadoc/

  #jb
  ui-student-quiz-tests:
    name: UI Tests (Student Quiz taking)
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Upload surefire reports (ui - student quiz)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports-ui-student-quiz
          path: |
            **/target/surefire-reports/*
            **/target/failsafe-reports/*